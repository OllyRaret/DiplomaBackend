{
	"info": {
		"_postman_id": "c3679120-46da-466c-bbb8-7aeb3cd6cd1a",
		"name": "7. Favorite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44112372",
		"_collection_link": "https://alinaobrezkova.postman.co/workspace/Diploma-tests~e4acbeed-fff8-4ec3-84d0-7292590347e4/collection/44112372-c3679120-46da-466c-bbb8-7aeb3cd6cd1a?action=share&source=collection_link&creator=44112372"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login startup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"if (jsonData.auth_token) {",
									"    pm.environment.set(\"access_token_sturtup\", jsonData.auth_token);",
									"    console.log(\"Токен сохранён:\", jsonData.auth_token);",
									"} else {",
									"    console.warn(\"Токен не найден в ответе.\");",
									"}",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field 'auth_token'\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.auth_token).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Auth token is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.auth_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Auth token should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Verify the auth token is in a valid format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.auth_token).to.be.a('string').and.to.match(/[A-Za-z0-9]{30,}/, \"Auth token format is not valid\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"testuser@example.com\",\r\n  \"password\": \"StrongPassword123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/auth/token/login/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth",
								"token",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login specialist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"if (jsonData.auth_token) {",
									"    pm.environment.set(\"access_token_specialist\", jsonData.auth_token);",
									"    console.log(\"Токен сохранён:\", jsonData.auth_token);",
									"} else {",
									"    console.warn(\"Токен не найден в ответе.\");",
									"}",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field 'auth_token'\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.auth_token).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Auth token is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.auth_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Auth token should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Verify the auth token is in a valid format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.auth_token).to.be.a('string').and.to.match(/[A-Za-z0-9]{30,}/, \"Auth token format is not valid\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"testspecialist@example.com\",\r\n  \"password\": \"StrongPassword123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/auth/token/login/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth",
								"token",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login investor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"if (jsonData.auth_token) {",
									"    pm.environment.set(\"access_token_investor\", jsonData.auth_token);",
									"    console.log(\"Токен сохранён:\", jsonData.auth_token);",
									"} else {",
									"    console.warn(\"Токен не найден в ответе.\");",
									"}",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field 'auth_token'\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.auth_token).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Auth token is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.auth_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Auth token should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Verify the auth token is in a valid format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.auth_token).to.be.a('string').and.to.match(/[A-Za-z0-9]{30,}/, \"Auth token format is not valid\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"testinvestor@example.com\",\r\n  \"password\": \"StrongPassword123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/auth/token/login/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"auth",
								"token",
								"login",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Startup user",
			"item": [
				{
					"name": "Add new spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new spec duplicate id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('user_id');\r",
									"    pm.expect(response.user_id).to.be.an('array');\r",
									"    pm.expect(response.user_id[0]).to.include('объект не существует');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 9999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new startup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"startup_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/specialists/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"specialists",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/investors/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"investors",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav startup for spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/startup_for_specialist/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"startup_for_specialist",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav startup for inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 4003\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/startup_for_investor/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"startup_for_investor",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Del spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 204\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/remove/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Del inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 204\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/remove/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Del startup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 204\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"startup_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/remove/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Del spec wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 99999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/remove/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Del inv wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 999999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/remove/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"remove",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Del startup wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_sturtup}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"startup_id\": 9999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/remove/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"remove",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Specialist user",
			"item": [
				{
					"name": "Add new spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 7\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new spec duplicate id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 7\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('user_id');\r",
									"    pm.expect(response.user_id).to.be.an('array');\r",
									"    pm.expect(response.user_id[0]).to.include('объект не существует');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 9999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new startup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"startup_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/specialists/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"specialists",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/investors/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"investors",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav startup for spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/startup_for_specialist/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"startup_for_specialist",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav startup for inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 403\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_specialist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/startup_for_investor/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"startup_for_investor",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Investor user",
			"item": [
				{
					"name": "Add new spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new spec duplicate id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 6\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('user_id');\r",
									"    pm.expect(response.user_id).to.be.an('array');\r",
									"    pm.expect(response.user_id[0]).to.include('объект не существует');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 9999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new startup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test('Response has the required fields', function () {\r",
									"    const response = pm.response.json();\r",
									"\r",
									"    pm.expect(response).to.have.property('id');\r",
									"    pm.expect(response.id).to.be.an('number')\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"startup_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/specialists/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"specialists",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/investors/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"investors",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav startup for spec",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 403\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/startup_for_specialist/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"startup_for_specialist",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get fav startup for inv",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Token {{access_token_investor}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/favorites/startup_for_investor/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"favorites",
								"startup_for_investor",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}