name: Deploy Django Backend


on:
  workflow_run:
    workflows: ["Run Postman Collections"]
    types:
      - completed

jobs:
  build-and-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'master' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/diplomabackend:latest .

      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/diplomabackend:latest

      - name: Replace Docker username in docker-compose.yml
        run: |
          sed -i "s|USERNAME_FROM_SECRETS|${{ secrets.DOCKER_USERNAME }}|g" docker-compose.yml

      - name: Create nginx directory on server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "mkdir -p /app/nginx"

      - name: Create .env file on server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "cat > /app/.env << EOL
          SECRET_KEY=${{ secrets.ENV_SECRET_KEY }}
          DEBUG=${{ secrets.ENV_DEBUG }}
          ALLOWED_HOSTS=${{ secrets.ENV_ALLOWED_HOSTS }}
          
          POSTGRES_DB=${{ secrets.ENV_POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.ENV_POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.ENV_POSTGRES_PASSWORD }}
          POSTGRES_HOST=${{ secrets.ENV_POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.ENV_POSTGRES_PORT }}
          
          DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
          DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
          EOL"

      - name: Copy docker-compose and nginx config to server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/app/
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no nginx/nginx.conf ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/app/nginx/nginx.conf

      - name: Restart containers on server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "cd /app && docker compose down && docker compose pull --quiet && docker compose up -d"
